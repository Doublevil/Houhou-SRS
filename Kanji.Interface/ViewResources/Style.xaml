<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
                    xmlns:converters="clr-namespace:Kanji.Interface.Converters"
                    xmlns:models="clr-namespace:Kanji.Interface.Models"
                    xmlns:controls="clr-namespace:Kanji.Interface.Controls"
                    xmlns:actors="clr-namespace:Kanji.Interface.Actors"
                    xmlns:business="clr-namespace:Kanji.Interface.Business"
                    xmlns:utility="clr-namespace:Kanji.Interface.Utilities"
                    xmlns:cmodels="clr-namespace:Kanji.Common.Models;assembly=Kanji.Common">
    <converters:KanjiToStringConverter x:Key="KanjiToStringConverter" />
    <converters:KanjiToColorConverter x:Key="KanjiToColorConverter" />
    <converters:KanjiReadingToListConverter x:Key="KanjiReadingToListConverter" />
    <converters:VocabMeaningsToStringConverter x:Key="VocabMeaningsToStringConverter" />
    <converters:ValueToVisibilityConverter x:Key="ValueToVisibilityConverter" />
    <converters:VocabToColorConverter x:Key="VocabToColorConverter" />
    <converters:IntegerToOrdinalStringConverter x:Key="IntegerToOrdinalStringConverter" />
    <converters:VocabCategoriesToStringConverter x:Key="VocabCategoriesToStringConverter" />
    <converters:EqualityToBooleanConverter x:Key="EqualityToBooleanConverter" />
    <converters:DataTriggerValueBindingConverter x:Key="DataTriggerValueBindingConverter" />
    <converters:EnumDescriptionConverter x:Key="EnumDescriptionConverter" />
    <converters:KanjiWritingToCharactersConverter x:Key="KanjiWritingToCharactersConverter" />
    <converters:PercentageToStringConverter x:Key="PercentageToStringConverter" />
    <converters:ComparablesToBooleanConverter x:Key="ComparablesToBooleanConverter" />
    <converters:DateTimeToStringConverter x:Key="DateTimeToStringConverter" />
    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
    <converters:SrsEntryToStringConverter x:Key="SrsEntryToStringConverter" />
    <converters:StringAppendConverter x:Key="StringAppendConverter" />
    <converters:BooleanInverterConverter x:Key="BooleanInverterConverter" />
    <converters:StringFormatConverter x:Key="StringFormatConverter" />
    <converters:EnumBooleanConverter x:Key="EnumBooleanConverter" />
    <converters:SrsEntryImportResultConverter x:Key="SrsEntryImportResultConverter" />
    <converters:VocabFrequencyToStringConverter x:Key="VocabFrequencyToStringConverter" />
    <converters:VocabFrequencyToBrushConverter x:Key="VocabFrequencyToBrushConverter" />
    <converters:JlptLevelToBrushConverter x:Key="JlptLevelToBrushConverter" />
    <converters:IsFirstItemInContainerConverter x:Key="IsFirstItemInContainerConverter" />
    <converters:KanjiToReadingListConverter x:Key="KanjiToReadingListConverter" />
    <converters:WkLevelToBrushConverter x:Key="WkLevelToBrushConverter" />
    <converters:WikipediaRankToBrushConverter x:Key="WikipediaRankToBrushConverter" />
    <converters:ExtendedVocabToVariantListConverter x:Key="ExtendedVocabToVariantListConverter" />
    <converters:NullValueToVisibilityConverter x:Key="NullValueToVisibilityConverter" />

    <!-- ObjectDataProviders -->
    <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="KanjiFilterModeEnum">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="models:KanjiFilterModeEnum" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="ComparisonOperatorEnum">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="cmodels:ComparisonOperatorEnum" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider MethodName="GetValues" ObjectType="{x:Type sys:Enum}" x:Key="CsvImportNoTypeBehaviorEnum">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="models:CsvImportNoTypeBehavior" />
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>

    <!-- Colors -->
    <Color x:Key="KanjiTabGradientStart">#1888FF</Color>
    <Color x:Key="KanjiTabGradientEnd">#094488</Color>
    <Color x:Key="KanjiTabFade">#FFD5DBFF</Color>

    <Color x:Key="SrsTabGradientStart">#26A861</Color>
    <Color x:Key="SrsTabGradientEnd">#0D5D31</Color>
    <Color x:Key="SrsTabFade">#5825A760</Color>

    <Color x:Key="VocabTabGradientStart">#8822CC</Color>
    <Color x:Key="VocabTabGradientEnd">#44116A</Color>
    <Color x:Key="VocabTabFade">#CFC4ED</Color>

    <Color x:Key="SettingsTabGradientStart">#505050</Color>
    <Color x:Key="SettingsTabGradientEnd">#222222</Color>
    <Color x:Key="SettingsTabFade">#44000000</Color>

    <Color x:Key="HomeTabGradientStart">#CE874A</Color>
    <Color x:Key="HomeTabGradientEnd">#82562F</Color>
    <Color x:Key="HomeTabFade">#FFE3C1</Color>

    <!-- Brushes -->
    <SolidColorBrush x:Key="LegendTextBrush" Color="#AA000000" />
    <SolidColorBrush x:Key="FadedBorderBrush" Color="#66000000" />
    <SolidColorBrush x:Key="HomeTabGradientEndBrush" Color="{StaticResource HomeTabGradientEnd}" />
    <SolidColorBrush x:Key="SrsTabGradientEndBrush" Color="{StaticResource SrsTabGradientEnd}" />
    <SolidColorBrush x:Key="KanjiTabGradientEndBrush" Color="{StaticResource KanjiTabGradientEnd}" />
    <SolidColorBrush x:Key="VocabTabGradientEndBrush" Color="{StaticResource VocabTabGradientEnd}" />
    <SolidColorBrush x:Key="SettingsTabGradientEndBrush" Color="{StaticResource SettingsTabGradientEnd}" />

    <SolidColorBrush x:Key="HomeTabFadeBrush" Color="{StaticResource HomeTabFade}" />
    <SolidColorBrush x:Key="SrsTabFadeBrush" Color="{StaticResource SrsTabFade}" />
    <SolidColorBrush x:Key="KanjiTabFadeBrush" Color="{StaticResource KanjiTabFade}" />
    <SolidColorBrush x:Key="VocabTabFadeBrush" Color="{StaticResource VocabTabFade}" />
    <SolidColorBrush x:Key="SettingsTabFadeBrush" Color="{StaticResource SettingsTabFade}" />

    <!-- TEMPLATES -->
    <ControlTemplate x:Key="PaddinglessListbox" TargetType="{x:Type ListBox}">
        <!-- The paddingless listbox is a listbox that does not have any padding.
        The original listbox control has an unremovable padding so that's why this is required. -->
        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
            Background="{TemplateBinding Background}" Padding="0" SnapsToDevicePixels="True">
            <ScrollViewer Focusable="False" Padding="{TemplateBinding Padding}">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="Bd"
                    Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="True">
                <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- STYLES -->

    <!-- PAGE ROOTS -->
    <Style TargetType="Border" x:Key="PageBorder">
        <Setter Property="Padding" Value="10" />
    </Style>
    <Style TargetType="Border" x:Key="PageSeparator">
        <Setter Property="Height" Value="8" />
    </Style>

    <Style TargetType="Border" BasedOn="{StaticResource PageBorder}" x:Key="HomePageBorder">
        <Setter Property="Background" Value="{StaticResource HomeTabFadeBrush}" />
    </Style>
    <Style TargetType="Border" BasedOn="{StaticResource PageSeparator}" x:Key="HomePageSeparator">
        <Setter Property="Background" Value="{StaticResource HomeTabGradientEndBrush}" />
    </Style>

    <Style TargetType="Border" BasedOn="{StaticResource PageBorder}" x:Key="SrsPageBorder">
        <Setter Property="Background" Value="{StaticResource SrsTabFadeBrush}" />
    </Style>
    <Style TargetType="Border" BasedOn="{StaticResource PageSeparator}" x:Key="SrsPageSeparator">
        <Setter Property="Background" Value="{StaticResource SrsTabGradientEndBrush}" />
    </Style>

    <Style TargetType="Border" BasedOn="{StaticResource PageBorder}" x:Key="KanjiPageBorder">
        <Setter Property="Background" Value="{StaticResource KanjiTabFadeBrush}" />
    </Style>
    <Style TargetType="Border" BasedOn="{StaticResource PageSeparator}" x:Key="KanjiPageSeparator">
        <Setter Property="Background" Value="{StaticResource KanjiTabGradientEndBrush}" />
    </Style>

    <Style TargetType="Border" BasedOn="{StaticResource PageBorder}" x:Key="VocabPageBorder">
        <Setter Property="Background" Value="{StaticResource VocabTabFadeBrush}" />
    </Style>
    <Style TargetType="Border" BasedOn="{StaticResource PageSeparator}" x:Key="VocabPageSeparator">
        <Setter Property="Background" Value="{StaticResource VocabTabGradientEndBrush}" />
    </Style>

    <Style TargetType="Border" BasedOn="{StaticResource PageBorder}" x:Key="SettingsPageBorder">
        <Setter Property="Background" Value="{StaticResource SettingsTabFadeBrush}" />
    </Style>
    <Style TargetType="Border" BasedOn="{StaticResource PageSeparator}" x:Key="SettingsPageSeparator">
        <Setter Property="Background" Value="{StaticResource SettingsTabGradientEndBrush}" />
    </Style>

    <!-- Misc labels & textboxes -->
    <Style TargetType="{x:Type TextBox}" x:Key="LabelBox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style TargetType="TextBlock" x:Key="LegendText">
        <Setter Property="Foreground" Value="{StaticResource LegendTextBrush}" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource LabelBox}" x:Key="ErrorLabel">
        <Setter Property="Foreground" Value="DarkRed" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Bold" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Text}" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- KANJI READING COMPONENTS -->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource LabelBox}" x:Key="ReadingLabelTitle">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="BorderBrush" Value="#22000000" />
        <Setter Property="BorderThickness" Value="1,1,1,0" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="ReadingLabel" BasedOn="{StaticResource LabelBox}">
        <Setter Property="FontSize" Value="14" />
        <!--<Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.2" />
            </Setter.Value>
        </Setter>-->
        <Setter Property="FontFamily" Value="Meiryo UI" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource LabelBox}" x:Key="VocabReadingLabel">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.2" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="FontSize" Value="28" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource LabelBox}" x:Key="VocabCategoriesLabel">
        <Style.Triggers>
            <Trigger Property="Text" Value="">
                <Setter Property="Visibility" Value="Collapsed" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="ListBox" x:Key="KanjiReadingListbox">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <!-- Style of the list box items in the reading listbox -->
                    <Setter Property="Background" Value="#FFFFFFFF" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border BorderBrush="#CC000000" BorderThickness="1"
                                        Background="{TemplateBinding Background}"
                                        Padding="2">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Converter={StaticResource IsFirstItemInContainerConverter}}"
                                                    Value="True">
                                                    <!-- First item in the list. Add a margin -->
                                                    <Setter Property="Margin" Value="60 0 5 1" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Margin" Value="0 0 5 1" />
                                        </Style>
                                    </Border.Style>
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                            <i:InvokeCommandAction Command="{Binding DataContext.FilterReadingCommand,
                                                    RelativeSource={RelativeSource AncestorType={x:Type controls:KanjiDetails}}}"
                                                CommandParameter="{Binding HiraganaReading}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox Style="{StaticResource ReadingLabel}"
                                        Text="{Binding ModifiedReading}" />
                                </Border>

                                <!-- Triggers -->
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#FFE0E0E0" />
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox" BasedOn="{StaticResource KanjiReadingListbox}" x:Key="KanjiKunYomiReadingListbox">
        <Setter Property="BorderThickness" Value="0 0 0 1" />
    </Style>

    <!-- ACTION BUTTONS -->
    <Style TargetType="{x:Type Button}" x:Key="ActionButton">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                    <GradientStop Color="#774B8CFF" Offset="0.1"/>
                    <GradientStop Color="#77447FEA" Offset="0.49"/>
                    <GradientStop Color="#773D70D9" Offset="0.5"/>
                    <GradientStop Color="#77365DC6" Offset="0.9"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#99042880" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}" Cursor="Hand">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="8*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2*" />
                                <RowDefinition Height="16*" />
                                <RowDefinition Height="2*" />
                            </Grid.RowDefinitions>
                            <Viewbox Grid.Column="1" Grid.Row="1" StretchDirection="UpOnly" MaxHeight="30" MinHeight="15">
                                <Viewbox.RenderTransform>
                                    <TranslateTransform X="-1"  Y="-1" />
                                </Viewbox.RenderTransform>
                                <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}"
                                    VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black" />
                            </Viewbox>
                            <Viewbox Grid.Column="1" Grid.Row="1" StretchDirection="UpOnly" MaxHeight="30" MinHeight="15">
                                <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}"
                                    VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Viewbox>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="#FF3B7CEF" Offset="0.1"/>
                                        <GradientStop Color="#FF346FDA" Offset="0.49"/>
                                        <GradientStop Color="#FF2D60C9" Offset="0.5"/>
                                        <GradientStop Color="#FF264DB6" Offset="0.9"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderThickness" Value="3,2,1,1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="#DD7BBCFF" Offset="0.1"/>
                                        <GradientStop Color="#DD74AFEA" Offset="0.49"/>
                                        <GradientStop Color="#DD6DA0D9" Offset="0.5"/>
                                        <GradientStop Color="#DD668DC6" Offset="0.9"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="FontSize" Value="8" />
        <Setter Property="Foreground" Value="#33FFFFFF" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="25" />
    </Style>

    <!--<Style TargetType="{x:Type Button}" x:Key="KanjiSrsEditActionButton">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                    <GradientStop Color="#774B8CFF" Offset="0.1"/>
                    <GradientStop Color="#77447FEA" Offset="0.49"/>
                    <GradientStop Color="#773D70D9" Offset="0.5"/>
                    <GradientStop Color="#77365DC6" Offset="0.9"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#99042880" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            Height="{TemplateBinding Height}" Cursor="Hand">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*" />
                                <ColumnDefinition Width="8*" />
                                <ColumnDefinition Width="1*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="2*" />
                                <RowDefinition Height="16*" />
                                <RowDefinition Height="2*" />
                            </Grid.RowDefinitions>
                            <Viewbox Grid.Column="1" Grid.Row="1" StretchDirection="UpOnly" MaxHeight="30" MinHeight="15">
                                <Viewbox.RenderTransform>
                                    <TranslateTransform X="-1"  Y="-1" />
                                </Viewbox.RenderTransform>
                                <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}"
                                    VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="Black" />
                            </Viewbox>
                            <Viewbox Grid.Column="1" Grid.Row="1" StretchDirection="UpOnly" MaxHeight="30" MinHeight="15">
                                <TextBlock Text="{TemplateBinding Content}" FontSize="{TemplateBinding FontSize}"
                                    VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Viewbox>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="#FF3B7CEF" Offset="0.1"/>
                                        <GradientStop Color="#FF346FDA" Offset="0.49"/>
                                        <GradientStop Color="#FF2D60C9" Offset="0.5"/>
                                        <GradientStop Color="#FF264DB6" Offset="0.9"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="White" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderThickness" Value="3,2,1,1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="#DD7BBCFF" Offset="0.1"/>
                                        <GradientStop Color="#DD74AFEA" Offset="0.49"/>
                                        <GradientStop Color="#DD6DA0D9" Offset="0.5"/>
                                        <GradientStop Color="#DD668DC6" Offset="0.9"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Foreground" Value="LightGray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="FontSize" Value="8" />
        <Setter Property="Foreground" Value="#33FFFFFF" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Height" Value="25" />
    </Style>-->

    <Style TargetType="Button" BasedOn="{StaticResource ActionButton}" x:Key="BigActionButton">
        <Setter Property="Height" Value="Auto" />
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource ActionButton}" x:Key="BrightActionButton">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                    <GradientStop Color="#DD3B7CEF" Offset="0.1"/>
                    <GradientStop Color="#DD346FDA" Offset="0.49"/>
                    <GradientStop Color="#DD2D60C9" Offset="0.5"/>
                    <GradientStop Color="#DD264DB6" Offset="0.9"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="#BBFFFFFF" />
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource ActionButton}" x:Key="MiniActionButton">
        
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="#22000000" />
            </Trigger>
        </Style.Triggers>
        
        <Setter Property="Height" Value="20" />
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                    <GradientStop Color="#004B8CFF" Offset="0.1"/>
                    <GradientStop Color="#00447FEA" Offset="0.49"/>
                    <GradientStop Color="#003D70D9" Offset="0.5"/>
                    <GradientStop Color="#00365DC6" Offset="0.9"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="Transparent" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="BorderBrush" Value="#55042880" />
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ImageActionButton">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                    <GradientStop Color="#774B8CFF" Offset="0.1"/>
                    <GradientStop Color="#77447FEA" Offset="0.49"/>
                    <GradientStop Color="#773D70D9" Offset="0.5"/>
                    <GradientStop Color="#77365DC6" Offset="0.9"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#99042880" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border CornerRadius="3" BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                        Cursor="Hand">
                        <Image Source="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                            RenderOptions.BitmapScalingMode="NearestNeighbor" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="#FF3B7CEF" Offset="0.1"/>
                                        <GradientStop Color="#FF346FDA" Offset="0.49"/>
                                        <GradientStop Color="#FF2D60C9" Offset="0.5"/>
                                        <GradientStop Color="#FF264DB6" Offset="0.9"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="BorderThickness" Value="3,2,1,1" />
                        </Trigger>
                        <Trigger Property="Tag" Value="True">
                            <Setter Property="BorderThickness" Value="3,2,1,1" />
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="#FF3B7CEF" Offset="0.1"/>
                                        <GradientStop Color="#FF346FDA" Offset="0.49"/>
                                        <GradientStop Color="#FF2D60C9" Offset="0.5"/>
                                        <GradientStop Color="#FF264DB6" Offset="0.9"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                        <GradientStop Color="#DD7BBCFF" Offset="0.1"/>
                                        <GradientStop Color="#DD74AFEA" Offset="0.49"/>
                                        <GradientStop Color="#DD6DA0D9" Offset="0.5"/>
                                        <GradientStop Color="#DD668DC6" Offset="0.9"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="5,4" />
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource MiniActionButton}" x:Key="VocabAudioButton">
        <Style.Triggers>
            <DataTrigger Binding="{Binding State}" Value="Loading">
                <Setter Property="Content" Value="(Loading)" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="Playing">
                <Setter Property="Content" Value="(Playing)" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="Failed">
                <Setter Property="Content" Value="(Failed)" />
                <Setter Property="BorderBrush" Value="DarkRed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding State}" Value="Unavailable">
                <Setter Property="Content" Value="(No audio)" />
                <Setter Property="BorderBrush" Value="DarkRed" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsBusy, Source={x:Static business:AudioBusiness.Instance}}" Value="False" />
                    <Condition Binding="{Binding State}" Value="Unknown" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsBusy, Source={x:Static business:AudioBusiness.Instance}}" Value="False" />
                    <Condition Binding="{Binding State}" Value="Playable" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsBusy, Source={x:Static business:AudioBusiness.Instance}}" Value="False" />
                    <Condition Binding="{Binding State}" Value="Failed" />
                </MultiDataTrigger.Conditions>
                <Setter Property="IsEnabled" Value="True" />
            </MultiDataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Opacity" Value="1" />
                <Setter Property="BorderBrush" Value="#99042880" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Content" Value="Listen" />
        <Setter Property="IsEnabled" Value="False" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="ToolTip" Value="Attempt to retrieve and play the audio for this word." />
        <Setter Property="Opacity" Value="0.35" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Command" Value="{Binding PlayVocabAudioCommand, Source={x:Static business:AudioBusiness.Instance}}" />
        <Setter Property="CommandParameter" Value="{Binding .}" />
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="KanjiMeaningLabel" BasedOn="{StaticResource LabelBox}">
        <Setter Property="BorderThickness" Value="0 0 0 1" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Margin" Value="0 0 0 5" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <Style TargetType="{x:Type TextBox}" x:Key="KanjiTitle" BasedOn="{StaticResource LabelBox}">
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Background" Value="White" />
        <Setter Property="Margin" Value="5 5 5 0" />
        <Setter Property="Width" Value="90" />
        <Setter Property="Height" Value="90" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="FontSize" Value="64" />
        <Setter Property="FontFamily" Value="../Data/Fonts/NotoSansCJKjp-Thin.otf#Noto Sans CJK JP Thin" />
    </Style>

    <ControlTemplate TargetType="ListBoxItem" x:Key="MiniRadicalInListImageTemplate">
        <Border Height="26" Width="26" CornerRadius="3" BorderBrush="Black"
            Background="#86469B" BorderThickness="1" Padding="3" Margin="0 0 4 4">
            <Image Source="{Binding ImageUri}" Stretch="Uniform"
                RenderOptions.BitmapScalingMode="NearestNeighbor"
                HorizontalAlignment="Center"
                VerticalAlignment="Center" />
        </Border>
    </ControlTemplate>

    <ControlTemplate TargetType="ListBoxItem" x:Key="MiniRadicalInListTextTemplate">
        <Border Height="26" Width="26" CornerRadius="3" BorderBrush="Black"
            Background="#86469B" BorderThickness="1" Padding="6" Margin="0 0 4 4">
            <TextBlock HorizontalAlignment="Center" Foreground="White" FontSize="12"
                VerticalAlignment="Center" Text="{Binding Path=Character}" />
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="MiniRadicalInList">
        <Style.Triggers>
            <DataTrigger Binding="{Binding HasImage}" Value="True">
                <Setter Property="Template" Value="{StaticResource MiniRadicalInListImageTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding HasImage}" Value="False">
                <Setter Property="Template" Value="{StaticResource MiniRadicalInListTextTemplate}" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="ToolTip" Value="{Binding Path=Name}" />
    </Style>

    <Style TargetType="Border" x:Key="RadicalInListBorder">
        <Setter Property="Height" Value="70" />
        <Setter Property="Width" Value="80" />
        <Setter Property="CornerRadius" Value="3" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="6" />
        <Setter Property="Margin" Value="2" />
    </Style>

    <ControlTemplate TargetType="ListBoxItem" x:Key="RadicalInListTextTemplate">
        <Border Style="{StaticResource RadicalInListBorder}" Background="{TemplateBinding Background}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- Radical character shadow -->
                <TextBlock HorizontalAlignment="Center" FontSize="32" Foreground="Black"
                    Text="{Binding Reference.Character}">
                    <TextBlock.RenderTransform>
                        <TranslateTransform X="-1" Y="-1" />
                    </TextBlock.RenderTransform>
                </TextBlock>
                <!-- Radical character -->
                <TextBlock HorizontalAlignment="Center" FontSize="32"
                    Text="{Binding Reference.Character}" />

                <!-- Radical name -->
                <TextBlock Grid.Row="1" HorizontalAlignment="Center" Text="{Binding Reference.Name}"
                    TextWrapping="Wrap" LineStackingStrategy="BlockLineHeight" LineHeight="12" />
            </Grid>
        </Border>
    </ControlTemplate>

    <ControlTemplate TargetType="ListBoxItem" x:Key="RadicalInListImageTemplate">
        <Border Style="{StaticResource RadicalInListBorder}" Background="{TemplateBinding Background}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <!-- Radical image -->
                <Image Source="{Binding Reference.ImageUri}" Stretch="None" RenderOptions.BitmapScalingMode="NearestNeighbor" />

                <!-- Radical name -->
                <TextBlock Grid.Row="1" HorizontalAlignment="Center" Text="{Binding Reference.Name}"
                                       TextWrapping="Wrap" LineStackingStrategy="BlockLineHeight" LineHeight="12" />
            </Grid>
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="RadicalInList">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#86469B" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Reference.HasImage}" Value="True">
                <Setter Property="Template" Value="{StaticResource RadicalInListImageTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Reference.HasImage}" Value="False">
                <Setter Property="Template" Value="{StaticResource RadicalInListTextTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsRelevant}" Value="False">
                <Setter Property="Background" Value="#333333" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAvailable}" Value="Hidden">
                <Setter Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsAvailable}" Value="SemiHidden">
                <Setter Property="Opacity" Value="0.5" />
            </DataTrigger>
            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                <Setter Property="Background" Value="#FF2277CB" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                    <Condition Binding="{Binding IsSelected}" Value="False" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="#8646DD" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListBoxItem}" x:Key="KanjiInList">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border BorderThickness="1,1,1,1" BorderBrush="Gray" Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="45" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <!-- Kanji character -->
                            <TextBlock Grid.RowSpan="2" Text="{Binding DbKanji.Character, Mode=OneWay}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontSize" Value="26" />
                                        <Setter Property="HorizontalAlignment" Value="Center" />
                                        <Setter Property="VerticalAlignment" Value="Center" />
                                        <Setter Property="FontFamily" Value="../Data/Fonts/NotoSansCJKjp-Thin.otf#Noto Sans CJK JP Thin" />
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <!-- Kanji meaning label -->
                            <TextBlock Grid.Column="1" Text="{Binding DbKanji,
                                Mode=OneWay, Converter={StaticResource KanjiToStringConverter},
                                ConverterParameter={x:Static converters:KanjiToStringConversionType.Short},
                                IsAsync=False}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="FontSize" Value="16" />
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>

                            <!-- Kanji most used rank label -->
                            <TextBlock Grid.Column="1" Grid.Row="1">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding DbKanji.MostUsedRank}" Value="{x:Null}">
                                                <Setter Property="Text" Value="Rare kanji" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Text" Value="{Binding Path=DbKanji.MostUsedRank,
                                            Converter={StaticResource IntegerToOrdinalStringConverter},
                                            IsAsync=False,
                                            StringFormat=\{0\} most used kanji.}" />
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding DbKanji.MostUsedRank}" Value="{x:Null}">
                            <Setter Property="Background" Value="LightGray" />
                        </DataTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Margin" Value="10,0,0,0" />
                            <Setter Property="Background" Value="#220000FF" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#220000FF" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="#000000FF" />
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="RadicalList">
        <Setter Property="SelectionMode" Value="Multiple" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <!--<controls:VirtualizingWrapPanel />-->
                    <WrapPanel HorizontalAlignment="Center" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource RadicalInList}" />
    </Style>

    <Style TargetType="{x:Type ListBox}" x:Key="KanjiList">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource KanjiInList}" />
    </Style>

    <!-- Vocab -->

    <Style TargetType="RichTextBox" x:Key="VocabMeaningRichTextBox">
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="Margin" Value="0" />
    </Style>

    <Style TargetType="Paragraph">
        <Setter Property="Margin" Value="0" />
    </Style>

    <!-- Kanji writing listbox -->
    <Style TargetType="ListBox" x:Key="VocabKanjiWritingListbox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="4 0 4 0" />
        <Setter Property="Margin" Value="0 0 4 0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <TextBox Text="{Binding Character}"
                                    FontFamily="../Data/Fonts/NotoSansCJKjp-Thin.otf#Noto Sans CJK JP Thin"
                                    ToolTip="{Binding Kanji, Converter={StaticResource KanjiToStringConverter},
                                        ConverterParameter={x:Static converters:KanjiToStringConversionType.Short}}">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                            <i:InvokeCommandAction Command="{Binding DataContext.KanjiNavigationCommand,
                                                    RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding .}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <TextBox.Style>
                                        <Style TargetType="TextBox" BasedOn="{StaticResource LabelBox}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsMarginalReading}" Value="True">
                                                    <Setter Property="Opacity" Value="0.33" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}" Value="True">
                                                    <!--<Setter Property="TextDecorations" Value="Underline" />-->
                                                    <Setter Property="Cursor" Value="Hand" />
                                                    <Setter Property="Foreground" Value="Blue" />
                                                    <Setter Property="Opacity" Value="1" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding HasKanji}" Value="True" />
                                            <Condition Binding="{Binding RelativeSource={RelativeSource Self},
                                                Path=IsMouseOver}" Value="True" />
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="Tag" Value="True" />
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="26" />
    </Style>

    <!-- Vocab writing part listbox -->
    <Style TargetType="ListBox" x:Key="VocabWritingPartListbox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}">
                        <ItemsPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="3,0" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="18" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <ListBox Grid.Row="1" Style="{StaticResource VocabKanjiWritingListbox}"
                                        ItemsSource="{Binding Characters, Mode=OneWay}" x:Name="KWListbox" />
                                    <Border>
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding DataContext.HasUndeterminedFurigana, RelativeSource={RelativeSource AncestorType=ListBox}}" Value="True">
                                                        <Setter Property="BorderThickness" Value="0 0 0 1" />
                                                        <Setter Property="BorderBrush" Value="#22000000" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Viewbox MaxWidth="{Binding ElementName=KWListbox, Path=ActualWidth}">
                                            <TextBox Text="{Binding Furigana, Mode=OneWay}" HorizontalContentAlignment="Center"
                                                Padding="0" Margin="0">
                                                <TextBox.Style>
                                                    <Style TargetType="TextBox" BasedOn="{StaticResource LabelBox}" />
                                                </TextBox.Style>
                                                <TextBox.ToolTip>
                                                    <TextBlock Text="{Binding Furigana}" FontSize="16" />
                                                </TextBox.ToolTip>
                                            </TextBox>
                                        </Viewbox>
                                    </Border>

                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="FontSize" Value="14" />
    </Style>

    <!-- VOCAB -->
    
    <Style TargetType="TextBlock" x:Key="VocabVariantText">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            <DataTrigger Binding="{Binding Variant.IsMain}" Value="True">
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="Foreground" Value="#AAAA0000" />
            </DataTrigger>
        </Style.Triggers>
        <Setter Property="Foreground" Value="#777777" />
        <Setter Property="FontSize" Value="12" />
    </Style>
    
    <Style TargetType="ListBox" x:Key="VocabVariantList">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <ItemsPresenter />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0 0 0 3" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentControl Content="{Binding .}">
                                    <ContentControl.Resources>
                                        <DataTemplate DataType="{x:Type models:VocabVariant}">
                                            <Border Cursor="Hand" BorderBrush="{StaticResource FadedBorderBrush}" BorderThickness="1" Margin="5 2 0 0"
                                                Padding="4 0 4 0">
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.SwitchVocabCommand,
                                                                RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                            CommandParameter="{Binding .}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Variant.IsMain}" Value="True">
                                                                <!--<Setter Property="Background" Value="#6444FF55" />-->
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Background" Value="#44FFFFFF" />
                                                    </Style>
                                                </Border.Style>
                                                
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Style="{StaticResource VocabVariantText}">
                                                        <TextBlock.Text>
                                                            <MultiBinding StringFormat="{}{0} 【{1}】">
                                                                <MultiBinding.Bindings>
                                                                    <Binding Path="Variant.KanjiWriting" />
                                                                    <Binding Path="Variant.KanaWriting" />
                                                                </MultiBinding.Bindings>
                                                            </MultiBinding>
                                                        </TextBlock.Text>
                                                    </TextBlock>
                                                </StackPanel>
                                            </Border>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type sys:String}">
                                            <Border BorderBrush="#CC000000" BorderThickness="1" Margin="5 2 0 0"
                                                Background="#AA777777" Padding="4 0 4 0">
                                                <TextBlock Style="{StaticResource LegendText}" Text="{Binding .}" Foreground="White" />
                                            </Border>
                                        </DataTemplate>
                                    </ContentControl.Resources>
                                </ContentControl>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="ListBox" x:Key="VocabList">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border>
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True">
                                                    <Setter Property="Background" Value="#22000000" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <Border BorderThickness="0,0,0,1" VerticalAlignment="Center" BorderBrush="#FF878787">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Style.Triggers>
                                                    <!-- When IsCommon -->
                                                    <DataTrigger Binding="{Binding DbVocab.IsCommon}" Value="True">
                                                        <Setter Property="Background" Value="#3F91EF5E" />
                                                    </DataTrigger>
                                                    <!-- When IsObsolete -->
                                                    <DataTrigger Binding="{Binding IsObsolete}" Value="True">
                                                        <Setter Property="Background" Value="#22000000" />
                                                        <Setter Property="Opacity" Value="0.8" />
                                                    </DataTrigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Opacity" Value="1" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="350" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <Grid Grid.Column="1">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="*" />
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="Auto" />
                                                </Grid.RowDefinitions>
                                                <!--<StackPanel Orientation="Horizontal">
                                                    <TextBox Style="{StaticResource LabelBox}" Foreground="#555555" FontSize="12"
                                                        Margin="0 0 10 0"
		                                                Text="{Binding DbVocab.KanjiWriting, Mode=OneWay}" />
                                                    <TextBox Style="{StaticResource LabelBox}" Foreground="#555555" FontSize="12"
                                                        Margin="0 0 0 0"
		                                                Text="{Binding DbVocab.KanaWriting, Mode=OneWay}" />
                                                </StackPanel>-->
                                            
                                                <StackPanel>

                                                    <WrapPanel Orientation="Horizontal" Margin="0 2 0 2">
                                                        <Border Margin="5 0 0 0" BorderThickness="1" BorderBrush="#55000000" CornerRadius="2"
                                                            HorizontalAlignment="Left" Padding="5 0 5 0" Width="93"
                                                            Visibility="{Binding ShowBookRanking, Converter={StaticResource ValueToVisibilityConverter}}"
                                                            Background="{Binding DbVocab.FrequencyRank, Converter={StaticResource VocabFrequencyToBrushConverter}}">
                                                            <Border.Style>
                                                                <Style TargetType="Border">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding DbVocab.FrequencyRank}" Value="1">
                                                                            <Setter Property="ToolTip" Value="Found 1 time in 7905 books." />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                    <Setter Property="ToolTip">
                                                                        <Setter.Value>
                                                                            <ToolTip Content="{Binding DbVocab.FrequencyRank}" ContentStringFormat="{}Found {0} times in 7905 books." />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>
                                                            </Border.Style>
                                                            <DockPanel LastChildFill="True">
                                                                <TextBlock HorizontalAlignment="Left" FontSize="10" DockPanel.Dock="Left" FontWeight="SemiBold" Opacity="0.75">
                                                                    本
                                                                </TextBlock>
                                                                <TextBlock HorizontalAlignment="Center">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Setter Property="Text">
                                                                                <Setter.Value>
                                                                                    <Binding Path="DbVocab.FrequencyRank" Converter="{StaticResource VocabFrequencyToStringConverter}" />
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="FontSize" Value="10" />
                                                                            <Setter Property="Foreground" Value="#555555" />
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                </TextBlock>
                                                            </DockPanel>
                                                        </Border>

                                                        <Border Margin="5 0 0 0" BorderThickness="1" BorderBrush="#55000000" CornerRadius="2"
                                                            HorizontalAlignment="Left" Padding="5 0 5 0"
                                                            Visibility="{Binding ShowWikipediaRank, Converter={StaticResource ValueToVisibilityConverter}}"
                                                            Background="{Binding DbVocab.WikipediaRank, Converter={StaticResource WikipediaRankToBrushConverter}}">
                                                            <Border.ToolTip>
                                                                <ToolTip Content="{Binding DbVocab.WikipediaRank, Converter={StaticResource IntegerToOrdinalStringConverter}}"
                                                                    ContentStringFormat="{}{0} out of 20000 most used word in a study of Japanese Wikipedia articles." />
                                                            </Border.ToolTip>
                                                            <DockPanel LastChildFill="True">
                                                                <TextBlock HorizontalAlignment="Left" FontSize="10" DockPanel.Dock="Left" Margin="0 0 6 0" FontWeight="SemiBold">
                                                                    W
                                                                </TextBlock>
                                                                <TextBlock HorizontalAlignment="Center">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Setter Property="Text">
                                                                                <Setter.Value>
                                                                                    <Binding Path="DbVocab.WikipediaRank" Converter="{StaticResource IntegerToOrdinalStringConverter}"
                                                                                        StringFormat="{}{0} most used" />
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="FontSize" Value="10" />
                                                                            <Setter Property="Foreground" Value="#555555" />
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                </TextBlock>
                                                            </DockPanel>
                                                        </Border>

                                                        <Border Margin="5 0 0 0" BorderThickness="1" BorderBrush="#55000000" CornerRadius="2"
                                                            HorizontalAlignment="Left" Padding="5 0 5 0"
                                                            Visibility="{Binding ShowJlptLevel, Converter={StaticResource ValueToVisibilityConverter}}"
                                                            Background="{Binding DbVocab.JlptLevel, Converter={StaticResource JlptLevelToBrushConverter}}">
                                                            <Border.ToolTip>
                                                                <ToolTip Content="{Binding DbVocab.JlptLevel}"
                                                                    ContentStringFormat="{}Part of the vocabulary list for the N{0} level of the Japanese-Language Proficiency Test." />
                                                            </Border.ToolTip>
                                                            <DockPanel LastChildFill="True">
                                                                <TextBlock HorizontalAlignment="Left" FontSize="10" DockPanel.Dock="Left" Opacity="1" FontWeight="SemiBold">
                                                                    JLPT
                                                                </TextBlock>
                                                                <TextBlock HorizontalAlignment="Right" Margin="5 0 0 0">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Setter Property="Text">
                                                                                <Setter.Value>
                                                                                    <Binding Path="DbVocab.JlptLevel" StringFormat="{}N{0}" />
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="FontSize" Value="10" />
                                                                            <Setter Property="Foreground" Value="#555555" />
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                </TextBlock>
                                                            </DockPanel>
                                                        </Border>

                                                        <Border Margin="5 0 0 0" BorderThickness="1" BorderBrush="#55000000" CornerRadius="2"
                                                            HorizontalAlignment="Left" Padding="5 0 5 0"
                                                            Visibility="{Binding ShowWkLevel, Converter={StaticResource ValueToVisibilityConverter}}"
                                                            Background="{Binding DbVocab.WaniKaniLevel, Converter={StaticResource WkLevelToBrushConverter}}">
                                                            <Border.ToolTip>
                                                                <ToolTip Content="{Binding DbVocab.WaniKaniLevel}"
                                                                    ContentStringFormat="{}Vocab learned at level {0} on the kanji learning website WaniKani." />
                                                            </Border.ToolTip>
                                                            <DockPanel LastChildFill="True">
                                                                <TextBlock HorizontalAlignment="Left" FontSize="10" DockPanel.Dock="Left" Opacity="1" FontWeight="SemiBold">
                                                                    WK
                                                                </TextBlock>
                                                                <TextBlock HorizontalAlignment="Right" Margin="5 0 0 0">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Setter Property="Text">
                                                                                <Setter.Value>
                                                                                    <Binding Path="DbVocab.WaniKaniLevel" StringFormat="{}Level {0}" />
                                                                                </Setter.Value>
                                                                            </Setter>
                                                                            <Setter Property="FontSize" Value="10" />
                                                                            <Setter Property="Foreground" Value="#555555" />
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                </TextBlock>
                                                            </DockPanel>
                                                        </Border>

                                                        <Border Margin="5 0 0 0" BorderThickness="1" BorderBrush="#55000000" CornerRadius="2"
                                                            HorizontalAlignment="Left" Padding="5 0 5 0">
                                                            <Border.Style>
                                                                <Style TargetType="Border">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding DbVocab.Categories.Count}" Value="0">
                                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                </Style>
                                                            </Border.Style>
                                                            <TextBlock Text="{Binding DbVocab.Categories, Converter={StaticResource VocabCategoriesToStringConverter}}" FontSize="10" />
                                                        </Border>
                                                    </WrapPanel>


                                                    <controls:BindableRichTextBox x:Name="MeaningRtb"
							                            Margin="0 0 0 5" Padding="0 0 0 0">
                                                        <controls:BindableRichTextBox.Style>
                                                            <Style TargetType="controls:BindableRichTextBox" BasedOn="{StaticResource VocabMeaningRichTextBox}">
                                                                <Setter Property="Document" Value="{Binding DbVocab, Mode=OneTime, IsAsync=False, Converter={StaticResource VocabMeaningsToStringConverter}}" />
                                                            </Style>
                                                        </controls:BindableRichTextBox.Style>
                                                    </controls:BindableRichTextBox>

                                                    <Button x:Name="ExpandButton" Content="Show more meanings" Width="140" HorizontalAlignment="Left"
                                                        Style="{StaticResource MiniActionButton}" Margin="5 0 0 3"
                                                        Visibility="{Binding NeedsExpanding, Converter={StaticResource ValueToVisibilityConverter}}">
                                                        <i:Interaction.Triggers>
                                                            <i:EventTrigger EventName="Click">
                                                                <utility:SetPropertyAction TargetObject="{Binding ElementName=MeaningRtb}" PropertyName="Document"
                                                                    PropertyValue="{Binding DbVocab, Mode=OneTime, IsAsync=False, Converter={StaticResource VocabMeaningsToStringConverter}, ConverterParameter=Full}" />
                                                                <utility:SetPropertyAction PropertyName="Visibility" PropertyValue="{x:Static Visibility.Collapsed}" />
                                                            </i:EventTrigger>
                                                        </i:Interaction.Triggers>
                                                    </Button>
                                                </StackPanel>


                                                <StackPanel Grid.Row="1" Orientation="Horizontal" Margin="5 0 0 5">
                                                    <StackPanel.Style>
                                                        <Style TargetType="StackPanel">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding SrsEntry}" Value="{x:Null}">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </Style>
                                                    </StackPanel.Style>
                                                    <Button Content="✙ Add" Width="70" HorizontalAlignment="Left" BorderBrush="#22000000"
				                                        Command="{Binding DataContext.AddToSrsCommand,
						                                    RelativeSource={RelativeSource AncestorType=controls:VocabList}}"
				                                        CommandParameter="{Binding .}" Style="{StaticResource MiniActionButton}" />
                                                    <Button Content="✙ Quick add" Width="70" HorizontalAlignment="Left" BorderBrush="#22000000"
				                                        Margin="8 0 0 0" Command="{Binding DataContext.QuickAddToSrsCommand,
						                                    RelativeSource={RelativeSource AncestorType=controls:VocabList}}"
				                                        CommandParameter="{Binding .}" Style="{StaticResource MiniActionButton}"
                                                        ToolTip="Add this vocab entry to your SRS list in one click." />
                                                </StackPanel>

                                                <controls:SrsVocabEntryProgress Grid.Row="1" DataContext="{Binding SrsEntry, IsAsync=True}">
                                                    <controls:SrsVocabEntryProgress.Style>
                                                        <Style TargetType="controls:SrsVocabEntryProgress">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding .}" Value="{x:Null}">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </controls:SrsVocabEntryProgress.Style>
                                                </controls:SrsVocabEntryProgress>
                                                <!--<Button Grid.Column="1" Content="Add to my list" Width="120" HorizontalAlignment="Left"
				                                    Command="{Binding DataContext.AddToSrsCommand,
						                                RelativeSource={RelativeSource AncestorType=controls:VocabList}}"
				                                    CommandParameter="{Binding .}">
                                                    <Button.Style>
                                                        <Style TargetType="Button" BasedOn="{StaticResource MiniActionButton}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding SrsEntry}" Value="{x:Null}">
                                                                    <Setter Property="Visibility" Value="Visible" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                        </Style>
                                                    </Button.Style>
                                                </Button>

                                                <controls:SrsVocabEntryProgress Grid.Column="1" DataContext="{Binding SrsEntry, IsAsync=True}">
                                                    <controls:SrsVocabEntryProgress.Style>
                                                        <Style TargetType="controls:SrsVocabEntryProgress">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding .}" Value="{x:Null}">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </controls:SrsVocabEntryProgress.Style>
                                                </controls:SrsVocabEntryProgress>-->
                                            </Grid>
                                        
                                            <Border Padding="0 3 0 0">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                        <ColumnDefinition Width="Auto" />
                                                    </Grid.ColumnDefinitions>
                                            
                                                    <!-- Audio button -->
                                                    <Button Grid.Column="0" HorizontalAlignment="Left" Style="{StaticResource VocabAudioButton}"
				                                        DataContext="{Binding Audio}">
                                                        <Button.LayoutTransform>
                                                            <RotateTransform Angle="-90" />
                                                        </Button.LayoutTransform>
                                                    </Button>



                                                    <Grid Grid.Column="1">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*" />
                                                            <RowDefinition Height="Auto" />
                                                            <RowDefinition Height="*" />
                                                        </Grid.RowDefinitions>
                                                        <StackPanel Grid.Row="1">
                                                            <ListBox Style="{StaticResource VocabWritingPartListbox}"
			                                                    ItemsSource="{Binding DbVocab, Mode=OneWay,
					                                                Converter={StaticResource KanjiWritingToCharactersConverter},
					                                                IsAsync=True}" />
                                                        </StackPanel>
                                                    </Grid>
                                                    <Grid Grid.Column="2">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*" />
                                                            <RowDefinition Height="*" />
                                                        </Grid.RowDefinitions>
                                                        <Button Content="Kanji" HorizontalAlignment="Right" FontSize="6"
				                                            ToolTip="Copy the kanji writing to the clipboard."
				                                            Command="{Binding DataContext.KanjiCopyCommand,
				                                                RelativeSource={RelativeSource AncestorType=controls:VocabList}}"
				                                            CommandParameter="{Binding .}">
                                                            <Button.Style>
                                                                <Style TargetType="Button" BasedOn="{StaticResource MiniActionButton}">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding DbVocab.KanjiWriting}" Value="{x:Null}">
                                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                                        </DataTrigger>
                                                                        <DataTrigger Binding="{Binding DbVocab.KanjiWriting}" Value="">
                                                                            <Setter Property="Visibility" Value="Collapsed" />
                                                                        </DataTrigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Opacity" Value="1" />
                                                                            <Setter Property="BorderBrush" Value="#99042880" />
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                    <Setter Property="Opacity" Value="0.15" />
                                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                                </Style>
                                                            </Button.Style>
                                                            <Button.LayoutTransform>
                                                                <RotateTransform Angle="-90" />
                                                            </Button.LayoutTransform>
                                                        </Button>
                                                        <Button Grid.Row="1" Content="Kana" HorizontalAlignment="Right" FontSize="6"
				                                            ToolTip="Copy the kana writing to the clipboard."
				                                            Command="{Binding DataContext.KanaCopyCommand,
				                                                RelativeSource={RelativeSource AncestorType=controls:VocabList}}"
				                                            CommandParameter="{Binding .}">
                                                            <Button.Style>
                                                                <Style TargetType="Button" BasedOn="{StaticResource MiniActionButton}">
                                                                    <Style.Triggers>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter Property="Opacity" Value="1" />
                                                                            <Setter Property="BorderBrush" Value="#99042880" />
                                                                        </Trigger>
                                                                    </Style.Triggers>
                                                                    <Setter Property="Opacity" Value="0.15" />
                                                                    <Setter Property="BorderBrush" Value="Transparent" />
                                                                </Style>
                                                            </Button.Style>
                                                            <Button.LayoutTransform>
                                                                <RotateTransform Angle="-90" />
                                                            </Button.LayoutTransform>
                                                        </Button>
                                                    </Grid>
                                                
                                                </Grid>
                                            </Border>

                                            <Border Grid.Row="1" Grid.ColumnSpan="2"  Visibility="{Binding HasVariants, Converter={StaticResource ValueToVisibilityConverter}}"
                                                BorderThickness="0 1 0 0" BorderBrush="#22000000" Padding="0 2 0 2">
                                                <ListBox Style="{StaticResource VocabVariantList}"
                                                                    ItemsSource="{Binding ., Mode=OneWay,
                                                                        Converter={StaticResource ExtendedVocabToVariantListConverter},
                                                                        IsAsync=True}" />
                                            </Border>
                                        </Grid>
                                    </Border>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SRS ENTRY WINDOW -->

    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource LegendText}" x:Key="KanjiReadingLabel">
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="White" />
    </Style>

    <Style TargetType="Border" x:Key="KanjiReadingLabelBorder">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Width" Value="58" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Margin" Value="0 0 5 1" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="#CC000000" />
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Background" Value="#444444" />
    </Style>

    <Style TargetType="ListBox" x:Key="KanjiReadingsListbox">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <WrapPanel />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <ContentControl Content="{Binding .}">
                                    <ContentControl.Resources>
                                        <DataTemplate DataType="{x:Type models:KanjiReading}">
                                            <Border BorderBrush="#CC000000" BorderThickness="1" Padding="2">
                                                <Border.Style>
                                                    <Style TargetType="Border">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter Property="Background" Value="#FFE0E0E0" />
                                                            </Trigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Margin" Value="0 0 5 1" />
                                                        <Setter Property="Background" Value="White" />
                                                    </Style>
                                                </Border.Style>
                                                <i:Interaction.Triggers>
                                                    <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                        <i:InvokeCommandAction Command="{Binding DataContext.FilterReadingCommand,
                                                                RelativeSource={RelativeSource AncestorType={x:Type controls:KanjiDetails}}}"
                                                            CommandParameter="{Binding HiraganaReading}" />
                                                    </i:EventTrigger>
                                                </i:Interaction.Triggers>
                                                <TextBox Style="{StaticResource ReadingLabel}" Text="{Binding ModifiedReading}" />
                                            </Border>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type models:KanjiReadingLabel}">
                                            <Border Style="{StaticResource KanjiReadingLabelBorder}">
                                                <TextBlock Style="{StaticResource KanjiReadingLabel}" Text="{Binding Label}" />
                                            </Border>
                                        </DataTemplate>
                                    </ContentControl.Resources>
                                </ContentControl>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="SettingText">
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <Style TargetType="TextBlock" x:Key="SettingCategoryTitle">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Padding" Value="5 0" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="#464646" />
    </Style>

    <Style TargetType="TextBox" BasedOn="{StaticResource LabelBox}" x:Key="NextReviewDateLabel">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="SemiBold" />
    </Style>

    <Style TargetType="TextBox" x:Key="SrsKanjiInput">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="MaxLength" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
    </Style>

    <Style TargetType="TextBox" x:Key="SrsVocabInput">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="MaxLength" Value="999" />
    </Style>

    <!--<Style TargetType="ProgressBar" x:Key="SrsItemProgressBar">
        <Setter Property="Value" Value="{Binding SuccessPercentage, Mode=OneWay}" />
        <Setter Property="Minimum" Value="0" />
        <Setter Property="Maximum" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border BorderBrush="#FF777777" BorderThickness="1" Padding="0" CornerRadius="2"
                            Height="20">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <GradientStop Color="#BB7C7C7C" />
                                <GradientStop Color="#BBAAAAAA" Offset="0.15" />
                                -->
    <!--<GradientStop Color="#FF7C7C7C" Offset="0.85" />-->
    <!--
                            </LinearGradientBrush>
                        </Border.Background>
                        <Grid>
                            -->
    <!-- Default template -->
    <!--
                            <Grid>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ReviewCount}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ToolTip>
                                    <Border>
                                        <StackPanel>
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ReviewCount}" Value="0">
                                                                <Setter Property="Text" Value="Never reviewed." />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ReviewCount}" Value="1">
                                                                <Setter Property="Text" Value="Reviewed 1 time." />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <Binding Path="ReviewCount"
                                                                    StringFormat="{}Reviewed {0} times." />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding SuccessCount}" Value="0">
                                                                <Setter Property="Text" Value="Never succeeded." />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding SuccessCount}" Value="1">
                                                                <Setter Property="Text" Value="Succeeded 1 time." />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <Binding Path="SuccessCount"
                                                                    StringFormat="{}Succeeded {0} times." />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding FailureCount}" Value="0">
                                                                <Setter Property="Text" Value="Never failed." />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FailureCount}" Value="1">
                                                                <Setter Property="Text" Value="Failed 1 time." />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <Binding Path="FailureCount"
                                                                    StringFormat="{}Failed {0} times." />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </Border>
                                </Grid.ToolTip>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="PART_Track" CornerRadius="2"
                                        BorderThickness="0" BorderBrush="#333333">
                                    <Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left"
                                               RadiusX="2" RadiusY="2">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                                <GradientStop Color="#FF26A861"/>
                                                <GradientStop Color="#FF0D5D31" Offset="0.95"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Border>
                                <TextBlock Text="{Binding SuccessPercentage,
                                    Converter={StaticResource PercentageToStringConverter}}"
                                           FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"
                                           FontWeight="SemiBold" Foreground="Black">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform X="-1" Y="-1" />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <TextBlock Text="{Binding SuccessPercentage,
                                    Converter={StaticResource PercentageToStringConverter}}"
                                           FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"
                                           FontWeight="SemiBold" Foreground="White" />
                            </Grid>
                            
                            -->
    <!-- "No success" template -->
    <!--
                            <Grid>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ReviewCount}" Value="0">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                        <Setter Property="Visibility" Value="Collapsed" />
                                    </Style>
                                </Grid.Style>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="10"
                                       Text="Not reviewed yet" Foreground="#CC000000" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <Style TargetType="ProgressBar" x:Key="SrsItemProgressBar">
        <Setter Property="Value" Value="{Binding CompletionPercentage, Mode=OneWay}" />
        <Setter Property="Minimum" Value="0" />
        <Setter Property="Maximum" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border BorderBrush="#FF777777" BorderThickness="1" Padding="0" CornerRadius="2"
                            Height="20">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <GradientStop Color="#BB7C7C7C" />
                                <GradientStop Color="#BBAAAAAA" Offset="0.15" />
                                <!--<GradientStop Color="#FF7C7C7C" Offset="0.85" />-->
                            </LinearGradientBrush>
                        </Border.Background>
                        <Grid>
                            <!-- Default template -->
                            <Grid>
                                <Grid.ToolTip>
                                    <Border>
                                        <StackPanel>
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ReviewCount}" Value="0">
                                                                <Setter Property="Text" Value="Never reviewed." />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding ReviewCount}" Value="1">
                                                                <Setter Property="Text" Value="Reviewed 1 time." />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <Binding Path="ReviewCount"
                                                                    StringFormat="{}Reviewed {0} times." />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding SuccessCount}" Value="0">
                                                                <Setter Property="Text" Value="Never succeeded." />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding SuccessCount}" Value="1">
                                                                <Setter Property="Text" Value="Succeeded 1 time." />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <Binding Path="SuccessCount"
                                                                    StringFormat="{}Succeeded {0} times." />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <TextBlock>
                                                <TextBlock.Style>
                                                    <Style TargetType="TextBlock">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding FailureCount}" Value="0">
                                                                <Setter Property="Text" Value="Never failed." />
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding FailureCount}" Value="1">
                                                                <Setter Property="Text" Value="Failed 1 time." />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Text">
                                                            <Setter.Value>
                                                                <Binding Path="FailureCount"
                                                                    StringFormat="{}Failed {0} times." />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </Border>
                                </Grid.ToolTip>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="PART_Track" CornerRadius="2"
                                        BorderThickness="0" BorderBrush="#333333">
                                    <Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left"
                                               RadiusX="2" RadiusY="2">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                                <GradientStop Color="#FF26A861"/>
                                                <GradientStop Color="#FF0D5D31" Offset="0.95"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Border>
                                <TextBlock Text="{Binding CompletionPercentage,
                                    Converter={StaticResource PercentageToStringConverter}}"
                                           FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"
                                           FontWeight="SemiBold" Foreground="Black">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform X="-1" Y="-1" />
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                <TextBlock Text="{Binding CompletionPercentage,
                                    Converter={StaticResource PercentageToStringConverter}}"
                                           FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"
                                           FontWeight="SemiBold" Foreground="White" />
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- SRS Page -->
    <Style TargetType="TextBlock" x:Key="SrsStatText">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Foreground" Value="#CCFFFFFF" />
        <Setter Property="Margin" Value="5 0 5 0" />
    </Style>

    <Style TargetType="ListBoxItem" x:Key="ItemsPerLevelListboxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border Margin="0 0 1 0" Height="50" Background="{Binding Level.ParentGroup.Color,
                        Converter={StaticResource ColorToBrushConverter}}" Padding="4" CornerRadius="0"
                        BorderBrush="{StaticResource FadedBorderBrush}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="40*" />
                                <RowDefinition Height="60*" />
                            </Grid.RowDefinitions>
                            <Viewbox Grid.Row="1">
                                <TextBlock Foreground="White" Text="{Binding ItemCount}"
                                    HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Viewbox>
                            <Border CornerRadius="0" Background="#33FFFFFF" BorderThickness="1"
                                BorderBrush="#66FFFFFF" HorizontalAlignment="Stretch"
                                Padding="6 0">
                                <Viewbox>
                                    <TextBlock Foreground="White" Text="{Binding Level.Name}"
                                        HorizontalAlignment="Center" VerticalAlignment="Center" />
                                </Viewbox>
                            </Border>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox" x:Key="ItemsPerLevelListbox">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0 1 0 0" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="ItemContainerStyle" Value="{StaticResource ItemsPerLevelListboxItem}" />
        <Setter Property="Template" Value="{StaticResource PaddinglessListbox}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid Rows="1" ClipToBounds="True" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBoxItem" x:Key="ItemsPerLevelGroupListboxItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Background="{Binding Group.Color, Converter={StaticResource ColorToBrushConverter}}"
                            Height="85" Padding="5" BorderThickness="0" Margin="0">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="9*" />
                                    <RowDefinition Height="4*" />
                                </Grid.RowDefinitions>

                                <Viewbox>
                                    <Viewbox.RenderTransform>
                                        <TranslateTransform X="-2" Y="-2" />
                                    </Viewbox.RenderTransform>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding ItemCount}" Foreground="Black" FontWeight="SemiBold" />
                                </Viewbox>
                                <Viewbox>
                                    <TextBlock TextWrapping="Wrap" Text="{Binding ItemCount}" Foreground="White" FontWeight="SemiBold" />
                                </Viewbox>

                                <Viewbox Grid.Row="1">
                                    <TextBlock TextWrapping="Wrap" Text="{Binding Group.Name}" Foreground="White" />
                                </Viewbox>
                            </Grid>
                        </Border>
                        <ListBox HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" Grid.Row="1" Style="{StaticResource ItemsPerLevelListbox}"
                            ItemsSource="{Binding Levels}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListBox" x:Key="ItemsPerLevelGroupListbox">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ItemsSource">
            <Setter.Value>
                <Binding Path="ItemsPerLevelGroup"
                         Source="{x:Static business:SrsBusiness.Instance}" />
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ItemsPerLevelGroupListboxItem}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <UniformGrid HorizontalAlignment="Stretch" Rows="1" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
    </Style>

    <!-- SRS REVIEW -->

    <Style TargetType="ProgressBar" x:Key="SrsReviewProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border BorderBrush="#FF777777" BorderThickness="1" Padding="0"
                            Height="6">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                <GradientStop Color="#BB7C7C7C" />
                                <GradientStop Color="#BBAAAAAA" Offset="0.15" />
                            </LinearGradientBrush>
                        </Border.Background>
                        <Grid>
                            <!-- Default template -->
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                </Grid.ColumnDefinitions>
                                <Border x:Name="PART_Track"
                                        BorderThickness="0" BorderBrush="#333333">
                                    <Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left">
                                        <Rectangle.Fill>
                                            <LinearGradientBrush StartPoint="1,0" EndPoint="1,1">
                                                <GradientStop Color="#DD7C7C7C"/>
                                                <GradientStop Color="#DD343434" Offset="0.85"/>
                                            </LinearGradientBrush>
                                        </Rectangle.Fill>
                                    </Rectangle>
                                </Border>
                            </Grid>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBlock" x:Key="SrsReviewsCountIndicator">
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="Margin" Value="0 0 5 0" />
    </Style>

    <!-- SETTINGS -->

    <Style TargetType="ListBox" x:Key="SettingUserResourceListBox">
        <Setter Property="Height" Value="150" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <Setter Property="Background" Value="{x:Null}" />
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ListBoxItem">
                                <Border BorderBrush="{StaticResource FadedBorderBrush}" BorderThickness="1"
                                    Margin="0 0 5 0" Padding="5 3" Width="200">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Value="True">
                                                    <DataTrigger.Binding>
                                                        <MultiBinding Converter="{StaticResource ComparablesToBooleanConverter}">
                                                            <Binding Path="Name" />
                                                            <Binding Path="DataContext.SelectedSetName"
                                                                RelativeSource="{RelativeSource AncestorType=UserControl}" />
                                                        </MultiBinding>
                                                    </DataTrigger.Binding>
                                                    <Setter Property="Tag" Value="True" />
                                                    <Setter Property="Background" Value="#CFEFBE" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Background" Value="White" />
                                        </Style>
                                    </Border.Style>
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <TextBlock Text="{Binding Name}" FontSize="16" Margin="0 0 0 0"
                                            HorizontalAlignment="Center" />

                                        <TextBlock Grid.Row="1" FontSize="12" Margin="0 0 0 2"
                                            HorizontalAlignment="Center">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Author}" Value="{x:Null}">
                                                            <Setter Property="Text" Value="Unknown author" />
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Author}" Value="">
                                                            <Setter Property="Text" Value="Unknown author" />
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                    <Setter Property="Text">
                                                        <Setter.Value>
                                                            <Binding Path="Author" StringFormat="{}by {0}" />
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>

                                        <TextBlock Grid.Row="2" FontSize="11" TextWrapping="Wrap"
                                            VerticalAlignment="Center" TextAlignment="Center"
                                            Text="{Binding Description}" />

                                        <UniformGrid Grid.Row="3" Rows="1">
                                            <Button Style="{StaticResource MiniActionButton}"
                                                Command="{Binding DataContext.BrowseSetCommand,
                                                    RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding .}" Content="Browse"
                                                ToolTip="Open the set directory in the explorer."
                                                Margin="0 0 5 0" />
                                            <Button Style="{StaticResource MiniActionButton}"
                                                Command="{Binding DataContext.SelectSetCommand,
                                                    RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                CommandParameter="{Binding .}" Content="Use this set"
                                                ToolTip="Sets this set to be used from now on."
                                                Visibility="{Binding Tag, RelativeSource={RelativeSource AncestorType=Border},
                                                    Converter={StaticResource NullValueToVisibilityConverter}}" />
                                            <TextBlock Text="In use" VerticalAlignment="Center" HorizontalAlignment="Center"
                                                Visibility="{Binding Tag, RelativeSource={RelativeSource AncestorType=Border},
                                                    Converter={StaticResource ValueToVisibilityConverter}, ConverterParameter=True}" />
                                        </UniformGrid>
                                    </Grid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- NAVIGATION PANEL -->

    <Style TargetType="Grid" x:Key="NavigationPanel">
        <Setter Property="Height" Value="60" />
    </Style>

    <Style TargetType="Grid" x:Key="NavigationPanelToolbar">

    </Style>

    <Style TargetType="Button" x:Key="NavigationPanelPreviousButton">

    </Style>

    <Style TargetType="Button" x:Key="NavigationPanelNextButton">

    </Style>

    <Style TargetType="Grid" x:Key="NavigationPanelTab">
        <Setter Property="Opacity" Value="0.8" />
    </Style>

    <LinearGradientBrush x:Key="KanjiTabGradient" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Color="{StaticResource KanjiTabGradientStart}" Offset="1" />
        <GradientStop Color="{StaticResource KanjiTabGradientEnd}" />
    </LinearGradientBrush>

    <Style TargetType="Grid" BasedOn="{StaticResource NavigationPanelTab}" x:Key="NavigationPanelKanjiTab">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static actors:NavigationActor.Instance}, Path=CurrentPage}"
                         Value="{x:Static models:NavigationPageEnum.Kanji}">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{StaticResource KanjiTabGradient}" />
    </Style>

    <LinearGradientBrush x:Key="SrsTabGradient" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Color="{StaticResource SrsTabGradientStart}" Offset="1" />
        <GradientStop Color="{StaticResource SrsTabGradientEnd}" />
    </LinearGradientBrush>

    <Style TargetType="Grid" BasedOn="{StaticResource NavigationPanelTab}" x:Key="NavigationPanelSrsTab">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static actors:NavigationActor.Instance}, Path=CurrentPage}"
                         Value="{x:Static models:NavigationPageEnum.Srs}">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{StaticResource SrsTabGradient}" />
    </Style>

    <LinearGradientBrush x:Key="VocabTabGradient" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Color="{StaticResource VocabTabGradientStart}" Offset="1" />
        <GradientStop Color="{StaticResource VocabTabGradientEnd}" />
    </LinearGradientBrush>

    <Style TargetType="Grid" BasedOn="{StaticResource NavigationPanelTab}" x:Key="NavigationPanelVocabTab">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static actors:NavigationActor.Instance}, Path=CurrentPage}"
                Value="{x:Static models:NavigationPageEnum.Vocab}">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{StaticResource VocabTabGradient}" />
    </Style>

    <LinearGradientBrush x:Key="SettingsTabGradient" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Color="{StaticResource SettingsTabGradientStart}" Offset="1" />
        <GradientStop Color="{StaticResource SettingsTabGradientEnd}" />
    </LinearGradientBrush>

    <Style TargetType="Grid" BasedOn="{StaticResource NavigationPanelTab}" x:Key="NavigationPanelSettingsTab">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static actors:NavigationActor.Instance}, Path=CurrentPage}"
                Value="{x:Static models:NavigationPageEnum.Settings}">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{StaticResource SettingsTabGradient}" />
    </Style>

    <LinearGradientBrush x:Key="HomeTabGradient" StartPoint="1,1" EndPoint="1,0">
        <GradientStop Color="{StaticResource HomeTabGradientStart}" Offset="1" />
        <GradientStop Color="{StaticResource HomeTabGradientEnd}" />
    </LinearGradientBrush>

    <Style TargetType="Grid" BasedOn="{StaticResource NavigationPanelTab}" x:Key="NavigationPanelHomeTab">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Source={x:Static actors:NavigationActor.Instance}, Path=CurrentPage}"
                Value="{x:Static models:NavigationPageEnum.Home}">
                <Setter Property="Opacity" Value="1" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="False">
                <Setter Property="Opacity" Value="1" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Background" Value="{StaticResource HomeTabGradient}" />
    </Style>

    <Style TargetType="TextBlock" x:Key="NavigationPanelTabTitleSubCommon">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
    </Style>
    <Style TargetType="TextBlock" x:Key="NavigationPanelTabTitleSubShadow"
        BasedOn="{StaticResource NavigationPanelTabTitleSubCommon}">
        <Setter Property="Foreground" Value="#99000000" />
        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="-2" Y="-2" />
            </Setter.Value>
        </Setter>
    </Style>

    <ScaleTransform x:Key="NavigationPanelTabTitleScaleTransform" ScaleX="0.7" ScaleY="1.2" />

    <Style TargetType="Label" x:Key="NavigationPanelTabTitle">
        <Setter Property="Margin" Value="0 0 0 7" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Style="{StaticResource NavigationPanelTabTitleSubShadow}"
                            Text="{TemplateBinding Content}"
                            FontWeight="{TemplateBinding FontWeight}"
                            FontSize="{TemplateBinding FontSize}"
                            LayoutTransform="{StaticResource NavigationPanelTabTitleScaleTransform}"/>
                        <TextBlock Style="{StaticResource NavigationPanelTabTitleSubCommon}"
                            Text="{TemplateBinding Content}"
                            FontWeight="{TemplateBinding FontWeight}"
                            FontSize="{TemplateBinding FontSize}"
                            LayoutTransform="{StaticResource NavigationPanelTabTitleScaleTransform}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Label" x:Key="NavigationPanelTabTitleKanji" BasedOn="{StaticResource NavigationPanelTabTitle}">
        <Setter Property="LayoutTransform" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock Style="{StaticResource NavigationPanelTabTitleSubShadow}"
                            Text="{TemplateBinding Content}"
                            FontWeight="{TemplateBinding FontWeight}"
                            FontSize="{TemplateBinding FontSize}" />
                        <TextBlock Style="{StaticResource NavigationPanelTabTitleSubCommon}"
                            Text="{TemplateBinding Content}"
                            FontWeight="{TemplateBinding FontWeight}"
                            FontSize="{TemplateBinding FontSize}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="NavigationPanelButton">
        <Setter Property="Opacity" Value="0" />
    </Style>

    <!--<Style TargetType="controls:OutlinedTextBlock" x:Key="NavigationPanelTabTitle">
        <Setter Property="Fill" Value="White" />
        <Setter Property="Stroke" Value="Black" />
        <Setter Property="StrokeThickness" Value="0" />
        <Setter Property="FontSize" Value="26" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleY="1.2" ScaleX="0.8" />
            </Setter.Value>
        </Setter>

        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>-->

    <Style TargetType="TextBox" BasedOn="{StaticResource LabelBox}" x:Key="NavigationPanelTabSubtitle">

    </Style>

    <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
    <Style x:Key="{x:Type GroupBox}"
           TargetType="{x:Type GroupBox}">
        <Setter Property="BorderBrush"
                Value="#D5DFE5"/>
        <Setter Property="BorderThickness"
                Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GroupBox}">
                    <Grid SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="6"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="6"/>
                        </Grid.RowDefinitions>
                        <Border CornerRadius="4"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.Column="0"
                                Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="Transparent"
                                Background="{TemplateBinding Background}"/>
                        <Border x:Name="Header"
                                Padding="3,1,3,0"
                                Grid.Row="0"
                                Grid.RowSpan="2"
                                Grid.Column="1">
                            <ContentPresenter ContentSource="Header" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ContentPresenter Grid.Row="2"
                                          Grid.Column="1"
                                          Grid.ColumnSpan="2"
                                          Margin="{TemplateBinding Padding}"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Border CornerRadius="4"
                                Grid.Row="1"
                                Grid.RowSpan="3"
                                Grid.ColumnSpan="4"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Border.OpacityMask>
                                <MultiBinding Converter="{StaticResource BorderGapMaskConverter}"
                                              ConverterParameter="7">
                                    <Binding ElementName="Header"
                                             Path="ActualWidth"/>
                                    <Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualWidth"/>
                                    <Binding RelativeSource="{RelativeSource Self}"
                                             Path="ActualHeight"/>
                                </MultiBinding>
                            </Border.OpacityMask>

                            <Border BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    CornerRadius="3">
                                <Border BorderThickness="{TemplateBinding BorderThickness}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        CornerRadius="2"/>
                            </Border>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>